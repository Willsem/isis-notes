name: 'CI CD'

on: [push, pull_request]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    name: 'Build frontend'
    steps:
      - name: 'Check Out Repo'
        uses: actions/checkout@v2

      - name: 'Setup node'
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: 'Install packages'
        run: |
          cd frontend
          npm i

      - name: 'Build frontend project'
        run: |
          cd frontend
          npm run ng build

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: frontend-bin
          path: ./frontend/dist
          retention-days: 1

  publish-frontend:
    runs-on: ubuntu-latest
    name: 'Publish frontend'
    needs: build-frontend
    steps:
      - name: 'Check Out Repo'
        uses: actions/checkout@v2

      - name: 'Download binary backend'
        uses: actions/download-artifact@v2
        with:
          name: frontend-bin
          path: ./frontend/dist

      - name: 'Login to Docker Hub'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: 'Build and push'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/isis-frontend:latest

  build-backend:
    runs-on: ubuntu-latest
    name: 'Build backend'
    steps:
      - name: 'Check Out Repo'
        uses: actions/checkout@v2

      - name: 'Build backend project'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.202'
      - run: dotnet restore ./backend
      - run: dotnet publish ./backend -c Release -o ./backend/out

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: backend-bin
          path: ./backend/out
          retention-days: 1

  publish-backend:
    runs-on: ubuntu-latest
    name: 'Publsh backend'
    needs: build-backend
    steps:
      - name: 'Check Out Repo'
        uses: actions/checkout@v2

      - name: 'Download binary backend'
        uses: actions/download-artifact@v2
        with:
          name: backend-bin
          path: ./backend/out

      - name: 'Login to Docker Hub'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: 'Build and push'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/isis-backend:latest

  deploy:
    runs-on: ubuntu-latest
    name: 'Deploy project'
    needs: [publish-frontend, publish-backend]
    steps:
      - name: 'Check Out Repo'
        uses: actions/checkout@v2

      - name: 'Create ssh key'
        env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private.key
          sudo chmod 600 ~/.ssh/private.key

      - name: 'Connect to server with ssh'
        env:
            REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
            REMOTE_USER: ${{ secrets.REMOTE_USER }}
        run: ssh $REMOTE_USER@$REMOTE_HOST

      - name: 'Deploy to server'
        run: |
          docker-compose down
          docker-compose up -d

